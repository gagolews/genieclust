name: wheels

on: workflow_dispatch

env:
    CIBW_SKIP: cp36-* cp37-* cp38-* cp39-* *-win32 *_ppc64le *_s390x *_i686 *_universal2 *_riscv64 *_armv7l
    CIBW_ARCHS: all
    PYTHONUTF8: 1
    #*-win32 *-musllinux* *-macosx_*_universal2* *win_arm64* *-manylinux_arm64 *-manylinux_i686 *-manylinux_ppc64le *-manylinux_s390x *-manylinux_aarch64
    # TODO: manylinux aarch64
    # TODO: macos arm64
    #CIBW_TEST_SKIP: "*-macosx_arm64"
    #CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-15]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5

      - name: Set up QEMU
        if: runner.os == 'Linux' && runner.arch == 'X64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Install requirements and build wheels
        run: |
            python -m pip install --upgrade pip
            python -m pip install --upgrade twine build wheel
            python -m pip install --upgrade -r requirements.txt
            python -m pip install --upgrade cibuildwheel
            python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
